#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node in the linked list
typedef struct Node {
    int data;
    struct Node* next;
} Node;

// Function to create a new node
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (!newNode) {
        printf("Memory error\n");
        return NULL;
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to print the odd numbers in the linked list
void printOddNumbers(Node* head) {
    Node* current = head;
    while (current) {
        if (current->data % 2 != 0) {
            printf("%d ", current->data);
        }
        current = current->next;
    }
    printf("\n");
}

// Function to insert a new node at the end of the linked list
void insertNode(Node** head, int data) {
    Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
    } else {
        Node* current = *head;
        while (current->next) {
            current = current->next;
        }
        current->next = newNode;
    }
}

// Function to free the memory allocated for the linked list
void freeList(Node* head) {
    Node* current = head;
    while (current) {
        Node* next = current->next;
        free(current);
        current = next;
    }
}

int main() {
    Node* head = NULL;

    // Insert nodes into the linked list
    insertNode(&head, 1);
    insertNode(&head, 2);
    insertNode(&head, 3);
    insertNode(&head, 7);

    // Print the odd numbers in the linked list
    printf("Odd numbers in the linked list: ");
    printOddNumbers(head);

    // Free the memory allocated for the linked list
    freeList(head);

    return 0;
}
